name: Stockbit Snapshot

on:
  workflow_dispatch:
  schedule:
    # contoh: setiap 10 menit antara 02:00â€“03:00 UTC (â‰ˆ 09:00â€“10:00 WIB) di hari kerja
    - cron: "*/10 2 * * 1-5"

jobs:
  run-snapshot:
    runs-on: ubuntu-latest
    env:
      STOCKBIT_EMAIL: ${{ secrets.STOCKBIT_EMAIL }}
      STOCKBIT_PASSWORD: ${{ secrets.STOCKBIT_PASSWORD }}
      TG_TOKEN: ${{ secrets.TG_TOKEN }}
      TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
      STOCKBIT_TOKEN_PATH: token.json   # file token disimpan di workspace

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright
        run: |
          python -m playwright install --with-deps chromium

      # pastikan folder jadi package agar bisa import runners.*
      - name: Make packages importable
        run: |
          python - <<'PY'
          import pathlib
          for p in ["auth","clients","logic","notif","runners"]:
              pathlib.Path(p, "__init__.py").touch()
          print("created __init__.py files")
          PY

      - name: Test Stockbit login (capture bearer)
        run: |
          python - <<'PY'
          from auth.stockbit_login import get_bearer_token
          t = get_bearer_token()
          print("âœ… Token OK, length =", len(t))
          print("ðŸ”‘ Prefix:", t[:15] + "...")
          PY
          - name: Debug secrets presence
  run: |
    python - <<'PY'
    import os
    print("Email present?", bool(os.environ.get('STOCKBIT_EMAIL')))
    print("Password present?", bool(os.environ.get('STOCKBIT_PASSWORD')))
    print("Bearer present?", bool(os.environ.get('STOCKBIT_BEARER')))
    PY


      - name: Run snapshot once
        run: |
          python -c "import os; print('Email present?', bool(os.environ.get('STOCKBIT_EMAIL')))"
          python -m runners.snap_once
