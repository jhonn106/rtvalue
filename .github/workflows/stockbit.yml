name: Stockbit Snapshot

on:
  workflow_dispatch:
  schedule:
    # setiap 10 menit pada 02:00 UTC (â‰ˆ 09:00 WIB) di hari kerja
    - cron: "*/10 2 * * 1-5"

jobs:
  run-snapshot:
    runs-on: ubuntu-latest
    env:
      STOCKBIT_EMAIL: ${{ secrets.STOCKBIT_EMAIL }}
      STOCKBIT_PASSWORD: ${{ secrets.STOCKBIT_PASSWORD }}
      TG_TOKEN: ${{ secrets.TG_TOKEN }}
      TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
      STOCKBIT_BEARER: ${{ secrets.STOCKBIT_BEARER }}   # opsional; pakai token manual kalau Playwright gagal
      STOCKBIT_TOKEN_PATH: token.json

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright
        run: |
          python -m playwright install --with-deps chromium

      - name: Make packages importable
        run: |
          python - <<'PY'
          import pathlib
          for p in ["auth","clients","logic","notif","runners"]:
              pathlib.Path(p, "__init__.py").touch()
          print("created __init__.py files")
          PY

      - name: Debug Telegram chat id
        run: |
          python - <<'PY'
          import os, requests, json
          tok = os.environ.get("TG_TOKEN")
          if not tok:
              print("TG_TOKEN kosong; lewati cek Telegram.")
          else:
              r = requests.get(f"https://api.telegram.org/bot{tok}/getUpdates", timeout=15)
              print("getUpdates raw:", r.text[:500])
              try:
                  u = r.json()
                  if "result" in u and u["result"]:
                      chat = u["result"][-1]["message"]["chat"]
                      print("Detected chat object:", chat)
                      print("ðŸ‘‰ Gunakan chat.id ini untuk TG_CHAT_ID.")
                  else:
                      print("Kirim /start ke bot atau kirim pesan di group/channel lalu rerun workflow.")
              except Exception as e:
                  print("Gagal parse getUpdates JSON:", e)
          PY

      - name: Debug secrets presence
        run: |
          python - <<'PY'
          import os
          print("Email present?", bool(os.environ.get('STOCKBIT_EMAIL')))
          print("Password present?", bool(os.environ.get('STOCKBIT_PASSWORD')))
          print("Bearer present?", bool(os.environ.get('STOCKBIT_BEARER')))
          print("TG token present?", bool(os.environ.get('TG_TOKEN')))
          print("TG chat id present?", bool(os.environ.get('TG_CHAT_ID')))
          PY

      - name: Test Stockbit login (capture bearer)
        run: |
          python - <<'PY'
          from auth.stockbit_login import get_bearer_token
          t = get_bearer_token()
          print("âœ… Token OK, length =", len(t))
          print("ðŸ”‘ Prefix:", t[:15] + "...")
          PY

      - name: Run snapshot once
        run: |
          python -m runners.snap_once
